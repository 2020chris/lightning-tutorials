name: Publish notebook

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push to master
  push:
    branches: [main]

jobs:
  generate-ipynb:
    runs-on: ubuntu-20.04
    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 45
    env:
      PUB_BRANCH: publication

    steps:
    - uses: actions/checkout@v2
      with:
        # fetch all history for all branches and tags
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Sanity branch check
      run: |
        echo $PUB_BRANCH
        git ls-remote --heads origin ${PUB_BRANCH} | grep ${PUB_BRANCH} >/dev/null
        if [ "$?" == "1" ] ; then echo "Branch doesn't exist"; exit; fi

    - name: Get pip cache
      id: pip-cache
      run: python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip --version
        pip install --requirement requirements.txt
        pip list
      shell: bash

    - name: Process folders
      id: changed
      run: |
        head=$(git rev-parse origin/$PUB_BRANCH)
        git diff --name-only $head --output=master-diff.txt
        python .actions/filter-folders.py master-diff.txt changed_folders.txt
        python -c "lines = open('changed_folders.txt').readlines(); print(f'::set-output name=dirs::{len(lines)}')"
      shell: bash

    - name: Generate notebook
      if: steps.changed.outputs.dirs != 0
      run: |
        while IFS= read -r line; do
            bash .actions/ipynb-generate.sh $line
        done <<< $(cat changed_folders.txt)
      shell: bash

    - uses: fregante/setup-git-token@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Sync to pub
      run: |
        git checkout $PUB_BRANCH
        git merge main
        git push

    - name: Render notebook
      if: steps.changed.outputs.dirs != 0
      run: |
        while IFS= read -r line; do
            bash .actions/ipynb-render.sh $line
        done <<< $(cat changed_folders.txt)

        git commit -m ${{ github.event.head_commit.message }}
        git push
      shell: bash
